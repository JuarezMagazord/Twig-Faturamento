{#  Informações para estado destinatário. #}
{% self.getNotaFiscal().getNotaFiscalEndereco() [0].getCidade().getEstado().getSigla() == 'SC' %}

{#  ID da derivação. #}
{% self.notaFiscalItem.getProdutoDerivacao().getId() %}

{#  Obtem o valor já calculado anteriormente conforme o indicado nos parenteses, e precisa seguir a ordem de calculo informado no: FATURAMENTO > CONFIGURAÇÕES > IMPOSTOS. #}
{% set variavel = calculo_get_parametro_calculado('PARAMETRO') %}

{# Tipo de pessoa: 1 = Física; 2 = Juridica; 3 = Estrangeiro. #}
{% set self.notaFiscalItem.notaFiscal.pessoa.tipo == X %}

{# Contribuinte: TRUE = Sim; FALSE = Não. #}
{% if self.notaFiscalItem().notaFiscal().pessoa.tipo == 2 and self.notaFiscalItem().notaFiscal().pessoa.contribuinteIcms %}

{# Identifica qual o estado de origem (siglaEstadoEmissor) e o estado de destino (siglaEstado). #}
{% set self.siglaEstado == self.siglaEstadoEmissor %}

{# Identifica a entidade de venda na NFe, campo 'Filial de Venda (Loja)'. #}
{% set self.notaFiscalItem.notaFiscal.entidadeEmissao.id = '' %}

{# Identifica a CFOP dentro da NFe. #}
{% if self.notaFiscalItem.getCfop().getCodigo() %}

{# Condição global, para o CRT configuração, 1 = Simples nacional, 2= Presumido, 3 = Real, 4 = MEI. #}
{% if self.configuracaoGlobal.getOpcoesGlobais().getCrt() == 3 %}

{# Situação tributária para COFINS, o mesmo se aplica para ICMS, PIS, IPI. #}
{% if self.situacaoTributariaCOFINS.codigo() in ['00', '50']%}

{# Origem do produto na NFe #}
{% self.origemFiscal %}

{# NCM do produto na NFe #}
{% self.notaFiscalItem.ncm.codigo %}

